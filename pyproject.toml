[project]
name = "local-cloud-agent"
requires-python = ">=3.10"
dynamic = ["dependencies", "version"]


readme = "README.md"
authors = [
    { name = "Guy Wilson", email = "guywilsonjr@gmail.com" },
]
maintainers = [
    { name = "Guy Wilson", email = "guywilsonjr@gmail.com" },
]
classifiers = [
    # How mature is this project? Common values are
    #   3 - Alpha
    #   4 - Beta
    #   5 - Production/Stable
    "Development Status :: 3 - Alpha",
    # Indicate who your project is intended for
    "Intended Audience :: Developers",
    # Pick your license as you wish (see also "license" above)
    "License :: OSI Approved :: Apple Public Source License",    # Specify the Python versions you support here.
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]

[project.urls]
Homepage = "https://github.com/guywilsonjr/LocalCloudAgent"
Repository = "https://github.com/guywilsonjr/LocalCloudAgent"

[project.scripts]
local-cloud-agent = "local_cloud_agent.cli.main:main"

[build-system]
requires = ["setuptools", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"
[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]


[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }

[tool.setuptools_scm]
git_describe_command = "git describe --tags"

[tool.mypy]
files = ["src/local_cloud_agent"]
cache_dir = '/dev/null'
strict = true
disallow_any_unimported = true
disallow_any_expr = true
disallow_any_decorated = true
disallow_any_explicit = true
disallow_subclassing_any = true
disallow_untyped_decorators = true
warn_unreachable = true
show_error_context = true
show_error_code_links = true
pretty = true
plugins = [
    "pydantic.mypy"
]
# Strict mode; enables the following flags:
# --warn-unused-configs,
# --disallow-any-generics
# --disallow-subclassing-any
# --disallow-untyped-calls
# --disallow-untyped-defs
# --disallow-incomplete-defs,
# --check-untyped-defs
# --disallow-untyped-decorators
# --warn-redundant-casts
# --warn-unused-ignores
# --warn-return-any
# --no-implicit-reexport
# --strict-equality
# --extra-checks

# --strict-equality: Prohibit equality, identity, and container checks for non-overlapping types (inverse: --no-strict-equality)
#
# --extra-checks: Enable additional checks that are technically correct but may be
# impractical in real code. For example, this prohibits partial overlap
# in TypedDict updates, and makes arguments prepended via Concatenate
# positional-only (inverse: --no-extra-checks)
[[tool.mypy.overrides]]
module = 'pystemd.systemd1'
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "common.systemd",
    "agent.agent_info",
    "agent.util",
    "agent.post_config",
    "cli.main",
    "agent.operations.util",
    "agent.operations.send"
]
disallow_any_expr = false

[[tool.mypy.overrides]]
module = "common.systemd"
disallow_any_unimported = false

[[tool.mypy.overrides]]
module = ["agent.post_config", "agent.models"]
disallow_any_explicit = false

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true


[tool.pytest.ini_options]
addopts = "--cov=src/local_cloud_agent"
asyncio_mode = "strict"
pythonpath = "src/local_cloud_agent"
testpaths = [
    "tests"
]

[tool.coverage.run]
source = ["src/local_cloud_agent"]
[tool.coverage.report]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py312, mypy

[testenv]
deps =
    -rrequirements-test.txt
    -rrequirements-cli.txt
commands =
    python3.12 -m pytest -s --log-cli-level=INFO

[testenv:mypy]
commands =
    mypy
"""
